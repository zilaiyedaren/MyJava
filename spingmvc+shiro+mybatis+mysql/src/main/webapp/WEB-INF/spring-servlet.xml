<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-3.1.xsd
		 http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

    <!--<mvc:default-servlet-handler />-->
    <context:annotation-config/>

    <mvc:annotation-driven>
        <!--解决Spring MVC @ResponseBody返回中文字符串乱码问题-->
        <mvc:message-converters>
            <bean class="org.wuheng.mybatis.web.utils.UTF8StringHttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>

    <context:component-scan base-package="org.wuheng.mybatis.web.controller" />

    <bean id="serviceFactory" class="org.wuheng.mybatis.web.service.ServiceFactory"/>

    <bean id="placeholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:development.properties</value>
            </list>
        </property>
    </bean>
    <!--设置MultipartResolver-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxInMemorySize" value="30720"/>
        <property name="maxUploadSize" value="20000000" />
    </bean>

    <!--设置HandlerExceptionResolver-->
    <bean id="handlerExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="/error"/>
        <property name="defaultStatusCode" value="500"/>
    </bean>



    <!--设置ViewResolver-->
    <bean id="defaultResourceLoader" class="org.springframework.core.io.DefaultResourceLoader"/>
    <bean id="springTemplateLoader" class="org.summercool.view.freemarker.FreeMarkerTemplateLoader">
        <constructor-arg index="0" ref="defaultResourceLoader"/>
        <constructor-arg index="1" value="${slient.template.templateLoaderPath}" />
    </bean>

    <bean id="freemarkerConfiguration" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="templateLoaderPath" value="${slient.template.templateLoaderPath}"/>
        <property name="postTemplateLoaders">
            <array>
                <ref bean="springTemplateLoader"/>
            </array>
        </property>

        <property name="freemarkerSettings">
            <props>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="number_format">#</prop>
                <prop key="template_update_delay">0</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="auto_import">/macro/macros.ftl as spring</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
            </props>
        </property>

    </bean>

    <bean id="freemarkerConfigurer" class="org.wuheng.mybatis.web.shiro.freemarker.ShiroTagFreeMarkerConfigurer">
        <property name="configuration" ref="freemarkerConfiguration"/>
    </bean>

    <!--Spring MVC 页面层FreeMarker的处理类-->
    <util:map id="uriModuleConstants">
        <entry>
            <key><value>error</value></key>
            <bean class="org.wuheng.mybatis.web.slient.config.freemarker.FreeMarkerErrorFunction"/>
        </entry>
        <entry key="ctx" value="${slient.ctx}"/>
    </util:map>

    <bean id="freeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="prefix" value=""/>
        <property name="suffix"  value=".ftl"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="attributes" ref="uriModuleConstants"/>
    </bean>


    <!--验证码-->
   <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg type="java.util.Properties">
                    <props>
                        <prop key="kaptcha.border">no</prop>
                        <prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
                        <prop key="kaptcha.obscurificator.imp">com.google.code.kaptcha.impl.ShadowGimpy</prop>
                        <prop key="kaptcha.image.width">200</prop>
                        <prop key="kaptcha.image.height">50</prop>
                        <prop key="kaptcha.textproducer.font.size">40</prop>
                        <prop key="kaptcha.textproducer.font.color">BLACK</prop>
                        <prop key="kaptcha.textproducer.char.string">0123456789</prop>
                        <prop key="kaptcha.textproducer.char.length.">5</prop>
                        <prop key="kaptcha.textproducer.clear.from">WHITE</prop>
                        <prop key="kaptcha.textproducer.clear.to">WHITE</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <!--&lt;!&ndash; 地址转发器 &ndash;&gt;使用Annotation注入-->
    <!--<bean name="indexController" class="org.wuheng.mybatis.web.controller.IndexController" />-->

    <!--<bean name="captchaController" class="org.wuheng.mybatis.web.controller.CaptchaController" />-->

    <!--<bean id="loginController" class="org.wuheng.mybatis.web.controller.LoginController"/>-->
    <!--<bean id="leftController" class="org.wuheng.mybatis.web.controller.LeftController"/>-->

    <!--<bean id="userController"-->
          <!--class="org.wuheng.mybatis.web.controller.shiro.UserController" />-->

    <!--&lt;!&ndash; role &ndash;&gt;-->
    <!--<bean id="roleController"-->
          <!--class="org.wuheng.mybatis.web.controller.shiro.RoleController" />-->

    <!--&lt;!&ndash; permission &ndash;&gt;-->
    <!--<bean id="permissionController"-->
          <!--class="org.wuheng.mybatis.web.controller.shiro.PermissionController" />-->

    <!--&lt;!&ndash;&lt;!&ndash; film &ndash;&gt;&ndash;&gt;-->
    <!--&lt;!&ndash;<bean id="filmController"&ndash;&gt;-->
          <!--&lt;!&ndash;class="org.wuheng.mybatis.web.controller.entertainment.FilmController" />&ndash;&gt;-->

    <!--&lt;!&ndash; tag &ndash;&gt;-->
    <!--<bean id="tagController"-->
          <!--class="org.wuheng.mybatis.web.controller.TagController" />-->

    <!--&lt;!&ndash; novel &ndash;&gt;-->
    <!--<bean id="novelController" class="org.wuheng.mybatis.web.controller.entertainment.NovelController"/>-->

    <!--<bean id="simpleUrlMapping"-->
          <!--class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">-->
        <!--<property name="mappings">-->
            <!--<props>-->
                <!--<prop key="/slient/views/index.html">indexController</prop>-->
                <!--<prop key="/slient/views/captcha.html">captchaController</prop>-->
                <!--<prop key="/slient/views/login.html">loginController</prop>-->
                <!--<prop key="/slient/views/left.html">leftController</prop>-->

                <!--&lt;!&ndash; userController &ndash;&gt;-->
                <!--<prop key="rbac/user/userList.html">userController</prop>-->
                <!--<prop key="rbac/user/createUser.html">userController</prop>-->
                <!--<prop key="rbac/user/deleteUser.html">userController</prop>-->
                <!--<prop key="rbac/user/updateUser.html">userController</prop>-->
                <!--<prop key="rbac/user/correlationRoles.html">userController</prop>-->

                <!--&lt;!&ndash; roleController &ndash;&gt;-->
                <!--<prop key="rbac/role/roleList.html">roleController</prop>-->
                <!--<prop key="rbac/role/createRole.html">roleController</prop>-->
                <!--<prop key="rbac/role/updateRole.html">roleController</prop>-->
                <!--<prop key="rbac/role/deleteRole.html">roleController</prop>-->
                <!--<prop key="rbac/role/correlationPermissions.html">roleController</prop>-->
                <!--<prop key="rbac/role/allRoles.html">roleController</prop>-->

                <!--&lt;!&ndash; permissionController &ndash;&gt;-->
                <!--<prop key="rbac/permission/permissionList.html">permissionController</prop>-->
                <!--<prop key="rbac/permission/createPermission.html">permissionController</prop>-->
                <!--<prop key="rbac/permission/updatePermission.html">permissionController</prop>-->
                <!--<prop key="rbac/permission/deletePermission.html">permissionController</prop>-->
                <!--<prop key="rbac/permission/allPermissions.html">permissionController</prop>-->

                <!--&lt;!&ndash; filmController &ndash;&gt;-->
                <!--<prop key="/slient/views/entertainment/film/filmList.html">filmController</prop>-->
                <!--<prop key="/slient/views/entertainment/film/createFilm.html">filmController</prop>-->

                <!--&lt;!&ndash; tagController &ndash;&gt;-->
                <!--<prop key="tag/tagList.html">tagController</prop>-->

                <!--&lt;!&ndash; novelController &ndash;&gt;-->
                <!--<prop key="/slient/views/entertainment/novel/novelList.html">novelController</prop>-->
                <!--<prop key="/slient/views/entertainment/novel/createNovel.html">novelController</prop>-->
                <!--<prop key="/slient/views/entertainment/novel/deleteNovel.html">novelController</prop>-->
                <!--<prop key="/slient/views/entertainment/novel/updateNovel.html">novelController</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; RequestMapping Handler &ndash;&gt;-->
    <!--<bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">-->
        <!--<property name="order" value="1"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash; 视图解析器，根据视图的名称new ModelAndView(name)，在配置文件查找对应的bean配置 &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">-->
        <!--<property name="order" value="3"/>-->
    <!--</bean>-->

    <!-- 允许对静态资源文件的访问 -->
    <mvc:default-servlet-handler/>
</beans>